apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-backend-tekton-template
  title: Add a Tekton CI pipeline to an existing Quarkus Application
  description: Add a Tekton CI pipeline to an existing Quarkus Application
  tags:
    - quarkus
    - java
    - maven
    - tekton
spec:
  owner: france-ssa-authors
  system: janus-idp
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - component_id
        - githubOrg
        - repoName
        - owner
        - system
        - port
      properties:
        component_id:
          title: Component ID Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          maxLength: 20
        githubOrg:
          title: GitHub Organization
          type: string
          default: RedHat-Summit-Connect-France-2023
        repoName:
          title: Repository Name
          type: string
        subPath:
          title: Repo SubPath for the service
          type: string
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        owner:
          title: Owner
          type: string
          default: dev-user
          # ui:field: EntityPicker
          # ui:options:
          #   catalogFilter:
          #     kind:
          #       - Group
          #       - User
        system:
          title: System
          type: string
          default: system
          # ui:field: EntityPicker
          # ui:options:
          #   catalogFilter:
          #     kind:
          #       - System
        port:
          title: Port
          type: number
          default: 8080
          description: Override the port exposed for the application
    # - title: Provide information about the Java metadata
    #   required:
    #     - groupId
    #     - artifactId
    #     - javaPackageName
    #   properties:
    #     groupId:
    #       title: Group ID
    #       type: string
    #       default: io.janus
    #       description: Maven Group ID eg (io.janus)
    #     artifactId:
    #       title: Artifact ID
    #       type: string
    #       default: quarkusapp
    #       description: Maven Artifact ID
    #     javaPackageName:
    #       title: Java Package Namespace
    #       type: string
    #       default: io/janus/quarkusapp
    #       description: Name for the Java Package (ensure to use the / character as this is used for folder structure) should match Group ID and Artifact ID
    - title: Provide information about the CI method
      required:
        - ci
      properties:
        ci:
          title: Select a CI method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: ../../scaffolder-skeletons/github-actions-skeleton/
          enum:
            - ../../scaffolder-skeletons/tekton-skeleton/basic-ci/
            - ../../scaffolder-skeletons/tekton-skeleton/scan-check-ci/
          enumNames:
            - Basique Tekton CI
            - Tekton CI with Security Check
        imageRepository:
          title: Select a registry
          type: string
          default: image-registry.openshift-image-registry.svc:5000
          enum:
            - quay.io
            - image-registry.openshift-image-registry.svc:5000
          enumNames:
            - Quay
            - Internal OpenShift Registry
        # imageUrl:
        #   title: Image URL
        #   type: string
        #   description: The Quay.io or OpenShift Image URL <REGISTRY>/<IMAGE_URL>/<REPO_NAME>
        namespace:
          title: Namespace
          type: string
          description: The namespace for deploying resources
  steps:
    - id: ciTemplate
      name: Generating the CI Component
      action: fetch:template
      input:
        url: ${{ parameters.ci }}
        values:
          githubOrg: ${{ parameters.githubOrg }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}-dev
#          imageUrl: ${{ parameters.imageUrl }}
          imageBuilder: s2i-java
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          javaPackageName: ${{ parameters.javaPackageName }}

    - id: argocdTemplate
      name: Generating the argoCD Component
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/manifests-skeleton/manifests/
        copyWithoutTemplating: []
        values:
          repoUrl: "https://github.com/${{ parameters.githubOrg }}/${{ parameters.repoName }}-gitops.git"
          component_id: ${{ parameters.component_id }}
          namespace: ${{ parameters.namespace }}
          repoName: ${{ parameters.repoName }}-gitops.git
          githubOrg: ${{ parameters.githubOrg }}
          imageRepository: ${{ parameters.imageRepository }}
          imageUrl: ${{ values.imageUrl }}
          port: 8080
          hostUrl: 

#     - id: argocdTemplate
#       name: Generating the argoCD Component
#       action: fetch:template
#       input:
#         url: ./manifests/
#         copyWithoutTemplating: []
#         values:
#           component_id: ${{ parameters.component_id }}
#           description: ${{ parameters.description }}
#           destination: https://github.com/${{ parameters.githubOrg }}/${{ parameters.repoName }}-gitops.git
#           source_repository: https://github.com/${{ parameters.githubOrg }}/${{ parameters.repoName }}.git
#           repository_name: ${{parameters.component_id}}
#           git_owner: ${{ parameters.githubOrg }}
#           cluster: .apps.cluster-jr597.sandbox426.opentlc.com
#           namespace: ${{ parameters.component_id }}-dev
#           image_registry: ${{ parameters.image_registry }}
#           image_host: ${{ parameters.image_host }}
#           image_organization: ${{ parameters.image_organization }}
#           image_name: ${{ parameters.component_id }}
#           image_tag: ${{ parameters.image_tag }}
#           port: 8080
#           repository_host: ${{ parameters.repo.host }}
#           deployment_name: ${{ parameters.component_id }}
# #        targetPath: ./



    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../scaffolder-skeletons/catalog-info-skeleton/
        values:
          githubOrg: ${{ parameters.githubOrg }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          # imageUrl: ${{ parameters.imageUrl }}
          imageBuilder: s2i-java
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          javaPackageName: ${{ parameters.javaPackageName }}

    - id: publish
      name: Publishing to the GitOPS Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.githubOrg }}&repo=${{ parameters.repoName }}-gitops
        defaultBranch: main
        repoVisibility: public

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: "https://github.com/${{ parameters.githubOrg }}/${{ parameters.repoName }}-gitops.git"
        path: 'argocd/'

  output:
    links:
      - title: Open the Source Code Repository
        url: https://github.com/${{ parameters.githubOrg }}/${{ parameters.repoName }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
